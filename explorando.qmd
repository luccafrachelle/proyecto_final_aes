---
title: "Entrega Final de curso"
format:
  html:
    embed-resources: true
author: "Martín Grau Pérez , Lucca Frachelle"
date: "`r Sys.Date()`"
execute:
  echo: false
  message: false
  warning: false
---

```{r setup, include=FALSE}
library(tidyverse)
library(remotes)
library(devtools)
library(here)
library(readxl)
setwd(here())
library(StatsBombR)
library(forcats)
library(patchwork)
library(ggcorrplot)
library(gridExtra)

Matches<-readRDS("data/partidos_mundial2022.rds")
Matches_2023<-readRDS("data/partidos_mundialfem2023.rds")
d<-readRDS("data/partidos_mundial_COMPLETO2022.rds") 
d_mundialfem<-readRDS("data/data_mundial2023.rds") %>% 
  mutate(possession_team.name=str_extract(possession_team.name, ".*?(?= Women's)"),
         team.name=str_extract(team.name, ".*?(?= Women's)"))
eventos_irrelevantes<-c(5,18,19,24,26,27,34,35,36,40,41)

source("data/minutos jugados.R")
source("data/funciones creadas.R")
baseM<-read_rds("data/baseM.rds")
trayM<-read_rds("data/trayM.rds")
baseF<-read_rds("data/baseF.rds")
trayF<-read_rds("data/trayF.rds")
lineas <- data.frame(
  x = c(0, 0, 0, 120, 60, 0, 0, 18, 102, 102, 102, 0, 0, 6, 114, 114, 114),
  xend = c(120, 120, 0, 120, 60, 18, 18, 18, 120, 120, 102, 6, 6, 6, 120, 120, 114),
  y = c(0, 80, 0, 0, 0, 18, 62, 18, 18, 62, 18, 30, 50, 30, 30, 50, 30),
  yend = c(0, 80, 80, 80, 80, 18, 62, 62, 18, 62, 62, 30, 50, 50, 30, 50, 50))

```

## Resumen de la base
### Eventos 
El objetivo del presente trabajo es encontrar y modelar los determinantes de éxito de una posesión en el contexto de un partido de fútbol. Para ello, se cuenta con información relativa a los 64 partidos de los mundiales masculino y femenino disputados en Qatar en 2022 y Australia/Nueva Zelanda en 2023, respectivamente. Concretamente, los datos refieren a datos de eventing de la consultora especializada *StastBomb* y se obtuvieron a través de su paquete en R ‘StatsBombR’. Los datos de *eventing* refieren al registro de cada una de las acciones que realizan los jugadores con la pelota en cada uno de los partidos.  Dicha base está compuesta por los distintos eventos que se realizaron en el transcurso de cada encuentro y variables asociadas a cada tipo de evento según corresponda (184 variables y 459967 observaciones entre los 2 mundiales). Se considera un evento cada una de las acciones realizadas ya sea por los jugadores (pases, tiros al arco, atajadas, regates, traslados de balón, ...) así como del resto de los actores de un partido (cambios, tarjetas, inicio/final de partido, entre otras). Las posesiones están compuestas por varios de estos tipos de acciones. En este caso, la base cuenta con 33 tipos de eventos distintos.
Algunos de estos eventos no refieren específicamente a situaciones de juego tales como incios y finales de partidos, sustituciones de jugadores, formaciones iniciales, tarjetas mostradas por el juez, cambios tácticos, sueltas neutrales de balón y pausas en el partido ya sea por lesión u otra situación excepcional. Estos eventos no serán tenidos en cuenta en el análisis ya que se considera que no aportan nada desde el punto de vista del juego y de las posesiones dentro del mismo.


En ese sentido se trabajará con las acciones de juego que involucren la pelota o la disputa de ésta. Mayoritariamente tenemos pases pero también se registran traslados con pelota controlada (*Carry*), recepción de balón (*Ball Receipt*), acciones defensivas de presión hacia un rival (*Pressure*), recuperaciones de pelota (*Ball Recovery*), duelos (*Duel*), despejes (*Clearance*), tiros al arco (*Shot*), regates (*Dribble*), atajadas(*Goal Keeper*), entre otros.


```{r,echo=FALSE,message=FALSE,warning=FALSE}

g2<-d %>%
 group_by(type.name, match_id) %>%
 summarise(n = n()) %>%
 ungroup() %>%
 group_by(type.name) %>%
 summarise(mediana = round(median(n))) %>%
  filter(type.name %in% c("Pass","Ball Receipt*","Carry","Shot","Pressure","Ball Recovery","Duel","Clearance","Block","Goal Keeper")) %>% 
 #top_n(15, wt = mediana) %>%  
 mutate(type.name = fct_reorder(type.name, mediana, .desc = TRUE)) %>%
 ggplot(aes(x = type.name, y = mediana)) + 
 geom_col() + 
 labs(x = "tipo evento", y = "mediana por partido")+theme_bw()+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))

g2

# d %>%
#   filter(possession_team.name==team.name) %>% 
#  group_by(type.name, match_id,possession) %>%
#  summarise(n = n()) %>%
#  ungroup() %>%
#   filter(type.name %in% c("Pass","Ball Receipt*","Carry")) %>% 
#  #top_n(15, wt = mediana) %>%  
#  mutate(type.name = fct_reorder(type.name, n, .desc = TRUE)) %>%
#  ggplot(aes(x = type.name, y = n)) + 
#  geom_boxplot() 

```

En este contexto se buscará estudiar las distintas secuencias de los equipos en cuanto tienen la posesión a su favor (*possession*). En ese sentido, tomando en cuenta ambas copas del mundo se cuenta en total con un promedio de un poco más de 177 posesiones por partido para el mundial masculino mientras que un poco menos de 193 para el femenino. 

```{r descr pos,echo=FALSE}
g3<-d %>% mutate(mundial='M') %>% bind_rows(mutate(d_mundialfem,mundial='F')) %>% 
    filter(period<5 & !type.id %in% eventos_irrelevantes)  %>%
    group_by(mundial,match_id, possession) %>%
    summarise() %>% 
    count(match_id) %>% ungroup() %>% ggplot()+geom_boxplot(aes(mundial,n,fill=mundial))+labs(y='Posesiones por partido',x='Mundial')+
  scale_fill_brewer(palette="Set1")

```




```{r descr pases,fig.cap="dispersión posesiones y pases por partido según mundial",echo=FALSE,warning=FALSE,message=FALSE}
g4<-d %>% mutate(mundial='M') %>% bind_rows(mutate(d_mundialfem,mundial='F')) %>% 
    filter(period<5 & !type.id %in% eventos_irrelevantes & type.id==30)  %>%
    group_by(mundial,match_id) %>%
    summarise(n=n()) %>%  ungroup() %>% ggplot()+geom_boxplot(aes(mundial,n,fill=mundial))+labs(y='Pases por partido',x='Mundial')+
  scale_fill_brewer(palette="Set1")

g8<-d %>% mutate(mundial='M') %>% bind_rows(mutate(d_mundialfem,mundial='F')) %>% 
    filter(period<5 & !type.id %in% eventos_irrelevantes & type.id==43)  %>%
    group_by(mundial,match_id) %>%
    summarise(n=n()) %>%  ungroup() %>% ggplot()+geom_boxplot(aes(mundial,n,fill=mundial))+labs(y='Carries por partido',x='Mundial')+
  scale_fill_brewer(palette="Set1")

g3+g4+g8


pases_pos_gral<-d %>% mutate(mundial='M') %>% bind_rows(mutate(d_mundialfem,mundial='F')) %>% 
  filter(period<5 & !type.id %in% eventos_irrelevantes & type.id==30 & 
           possession_team.name==team.name) %>% 
  group_by(mundial,match_id, possession) %>%
  summarise(cantidad_pases = n()) %>% 
  ungroup() %>% group_by(mundial) %>% 
  summarise(promedio_pases = mean(cantidad_pases)) 

g5<-d %>% mutate(mundial='M') %>% bind_rows(mutate(d_mundialfem,mundial='F')) %>% 
    filter(period<5 & !type.id %in% eventos_irrelevantes & possession_team.name==team.name & type.id==30)  %>%
    group_by(mundial,match_id, possession) %>%
  summarise(cantidad_pases = n()) %>% 
  ungroup() %>% 
  ggplot()+geom_boxplot(aes(mundial,cantidad_pases,fill=mundial))+labs(y='Pases por posesión',x='Mundial')+
  scale_fill_brewer(palette="Set1")+
  coord_flip()

g6<-d %>% mutate(mundial='M') %>% bind_rows(mutate(d_mundialfem,mundial='F')) %>% 
    filter(period<5 & !type.id %in% eventos_irrelevantes & possession_team.name==team.name & type.id==30& is.na(pass.outcome.name))  %>%
    group_by(mundial,match_id) %>%
  summarise(cantidad_pases = n()) %>% 
  ungroup() %>% 
  ggplot()+geom_boxplot(aes(mundial,cantidad_pases,fill=mundial))+labs(y='Pases exitosos por partido',x='Mundial')+
  scale_fill_brewer(palette="Set1")+
  coord_flip()

g7<-d %>% mutate(mundial='M') %>% bind_rows(mutate(d_mundialfem,mundial='F')) %>% 
    filter(period<5 & !type.id %in% eventos_irrelevantes & possession_team.name==team.name & type.id==30& is.na(pass.outcome.name))  %>%
    group_by(mundial,match_id,possession) %>%
  summarise(cantidad_pases = n()) %>% 
  ungroup() %>% 
  ggplot()+geom_boxplot(aes(mundial,cantidad_pases,fill=mundial))+labs(y='Pases exitosos por posesión',x='Mundial')+
  scale_fill_brewer(palette="Set1")+
  coord_flip()
g6/g7

```





Por lo tanto, nuestra observaciones pasarán a ser las posesiones y no los distintos eventos. A estos efectos, con la información contenida en los datos de eventing conformó una base que nos permita describir cada una de estas secuencias para su posterior estudio y clasificación. Para ello, en una primera instancia, no se trabajará con todas las posesiones sino que por simplicidad nos quedaremos únicamente con aquellas posesiones en las cuales las acciones en las mismas son realizadas por el equipos poseedor del balón o, en su defecto, que las acciones del rival no involucren directamente la pelota: acciones de presión, faltas cometidas o recibidas, atajadas del golero y/o jugadores dribleados del conjunto que esta defendiendo (*Dribbled Past*). De esta manera la trayectoria de la pelota se ve únicamente afectada por las acciones realizadas por el equipo que tiene la posesión y no por el rival.
Nos quedaremos finalmente con 4961 posesiones a nivel masculino y 4409 del mundial femenino para estudiar la trayectoria de la pelota en estas secuencias. 




## Características de las posesiones
A través de los datos de eventing se generará una nueva base que contenga características de las casi 10000 secuencias a estudiar. La elección de dichas características es un tanto arbitraria pero se entiende que pueden ser de valor o utilidad a la hora de describir o encontrar ciertos patrones o estilos de juego: coordenadas de inicio y fin de la posesión (así como las zonas de inicio y fin), cantidad pases (totales y exitosos), de traslados (totales y exitosos), de tiros y de eventos en general realizados, cantidad de centros, cambios de frente, ingresos al área rival con pelota controlada y pases dentro del área, promedio de avance en el terreno según sea por pases o traslados con pelota controlada, si la jugada es iniciada por el golero, si éste participa o no, si termina en tiro o en gol, o incluso variables del estilo de la velocidad promedio de la posesión cuando los pases y las conducciones con la pelota se realizan hacia adelante. 
```{r correlaciones, echo=FALSE,message=FALSE,warning=FALSE,fig.cap='Correlaciones de las caracteristicas de las trayectorias'}
trayectoriasM<-trayM %>% 
  select(-c(timestamp,segs_corr,type.id,type.name,avance_p,avance_c,player.id,player.name)) %>% 
  group_by(match_id,possession) %>% 
  summarise(across(everything(), first)) %>% ungroup() %>% 
  mutate(prom_av_p=ifelse(is.nan(prom_av_p),0,prom_av_p),
         prom_av_t=ifelse(is.nan(prom_av_t),0,prom_av_t),
         vel_media_p=ifelse(is.nan(vel_media_p)|is.infinite(vel_media_p),0,vel_media_p),
         vel_media_c=ifelse(is.nan(vel_media_c)|is.infinite(vel_media_c),0,vel_media_c))
trayectoriasF<-trayF %>% 
  select(-c(,type.id,type.name,avance_p,avance_c,player.id,player.name)) %>% 
  group_by(match_id,possession) %>% 
  summarise(across(everything(), first)) %>% ungroup() %>% 
  mutate(prom_av_p=ifelse(is.nan(prom_av_p),0,prom_av_p),
         prom_av_t=ifelse(is.nan(prom_av_t),0,prom_av_t),
         vel_media_p=ifelse(is.nan(vel_media_p)|is.infinite(vel_media_p),0,vel_media_p),
         vel_media_c=ifelse(is.nan(vel_media_c)|is.infinite(vel_media_c),0,vel_media_c))
  
trayectoriasM %>%
  select(tiempo, n_eventos, n_pases, n_pasesC, n_traslados, n_driblesE, prom_av_p,
         prom_av_t, n_jugadores, n_centros, n_cdf, n_pases_arearival,
         n_ingresos_arearival, inicia_golero, participa_golero, termina_tiro,
         tiro, gol, zona_fin, nzonas, xG, vel_media_p, vel_media_c,
         vert_tot, horiz_tot, termina) %>%
  rbind(
    trayectoriasF %>%
      select(tiempo, n_eventos, n_pases, n_pasesC, n_traslados, n_driblesE, prom_av_p,
             prom_av_t, n_jugadores, n_centros, n_cdf, n_pases_arearival,
             n_ingresos_arearival, inicia_golero, participa_golero, termina_tiro,
             tiro, gol, zona_fin, nzonas, xG, vel_media_p, vel_media_c,
             vert_tot, horiz_tot, termina)
  ) %>%
  mutate(termina = ifelse(termina == "rival", 0, 1)) %>%
  cor(method = 'spearman') %>%
  round(4) %>%
  ggcorrplot()

```

### División en zonas
También podría ser útil tener en consideración no sólo dónde inició y terminó cada jugada sino que también de alguna manera replicar la trayectoria de la pelota en la secuencia. Para ello, se propone dividir la cancha en zonas y analizar hacia dónde el equipo llevó el balón y por cuántos sectores (zonas) del terreno pasó la pelota en la jugada. Cabe aclarar que para el conteo de zonas se tendrá en cuenta únicamente aquellas zonas dónde se realizaron acciones y no necesariamente por dónde pasó la pelota. 

```{r trayy,echo=FALSE,warning=FALSE,message=FALSE,eval=FALSE}
cortes_tray<-c(2,4,6,8,9,10,14,16,24,28,30,33,37,38,42,43) 
jugada_siguiente<-d %>% group_by(match_id,possession) %>% 
  summarise(tipo=first(play_pattern.name),eq=first(team.name)) %>% 
  mutate(jugada_siguiente=lead(tipo),eq_sig=lead(eq)) %>% select(-tipo)



graf<-trayM %>% ungroup() %>%  group_by(possession) %>% 
  filter(match_id==3857270  ) %>% 
  select(match_id,possession,termina) %>% distinct() %>% 
  inner_join(d,by=c("match_id","possession")) %>% 
  filter((sum(type.id==30)>0|sum(type.id==43)>0) & 
           !type.id%in% eventos_irrelevantes) %>% 
  ungroup() %>% 
  select(match_id,minute,second,period,possession,possession_team.name,team.name,type.name,player.name,
         under_pressure,location.x,location.y,pass.end_location.x,pass.end_location.y,
         carry.end_location.x,carry.end_location.y,play_pattern.name,resultado,pass.outcome.name,
         ball_receipt.outcome.name,duel.outcome.name,dribble.outcome.name,
         interception.outcome.name,shot.end_location.x,shot.end_location.y,shot.outcome.name,termina) %>% 
  mutate(loc.y=80-location.y,
         pass.end_loc.y=80-pass.end_location.y,
         carry.end_loc.y=80-carry.end_location.y,
         end.x=ifelse(type.name=="Pass",pass.end_location.x,ifelse(type.name=="Carry",carry.end_location.x,
                                                              location.x)),
         end.y=ifelse(type.name=="Pass",pass.end_loc.y,ifelse(type.name=="Carry",carry.end_loc.y,
                                                              loc.y))) %>% mutate(exitoso=ifelse(is.na(pass.outcome.name),"si","no")) 




ggplot()+geom_segment(aes(x=location.x,xend=end.x,y=loc.y,
                          yend=end.y,color=termina),filter(graf,possession_team.name==team.name&
                                                               type.name%in%c("Pass","Carry")))+
  geom_point(aes(location.x,loc.y,color=termina),filter(graf,possession_team.name==team.name&
                                                            !type.name%in%c("Pass","Carry")))+
  geom_segment(aes(x=location.x,xend=shot.end_location.x,y=loc.y,
                   yend=80-shot.end_location.y,color=termina),linetype = 2,filter(graf,possession_team.name==team.name&
                                                                                      type.name=="Shot"))+
  geom_segment(aes(x=x,xend=xend,y=y,yend=yend),data=lineas)+
  facet_wrap(~possession_team.name)+
  labs(caption='Sentido del ataque de izquierda a derecha')+theme(legend.position = "bottom")

```




```{r graf zonas,echo=FALSE,fig.cap='División en zonas de la cancha',warning=FALSE,message=FALSE,fig.align='center'}
#grafz(30)+grafz(3)/grafz(8)
grid.arrange(grafz(30),grid.arrange(grafz(3),grafz(8),ncol=1),ncol=2)
```




```{r tray,echo=FALSE,warning=FALSE,message=FALSE}
graf<-trayM %>% ungroup() %>%  group_by(possession) %>% 
  filter(match_id==3857264 & possession==112) %>% 
  select(match_id,possession,termina) %>% distinct() %>% 
  inner_join(d,by=c("match_id","possession")) %>% 
  filter((sum(type.id==30)>0|sum(type.id==43)>0) & 
           !type.id%in% eventos_irrelevantes) %>% 
  ungroup() %>% 
  select(match_id,minute,second,period,possession,possession_team.name,team.name,type.name,player.name,
         under_pressure,location.x,location.y,pass.end_location.x,pass.end_location.y,
         carry.end_location.x,carry.end_location.y,play_pattern.name,resultado,pass.outcome.name,
         ball_receipt.outcome.name,duel.outcome.name,dribble.outcome.name,
         interception.outcome.name,shot.end_location.x,shot.end_location.y,shot.outcome.name,termina) %>% 
  mutate(loc.y=80-location.y,
         pass.end_loc.y=80-pass.end_location.y,
         carry.end_loc.y=80-carry.end_location.y,
         end.x=ifelse(type.name=="Pass",pass.end_location.x,ifelse(type.name=="Carry",carry.end_location.x,
                                                              location.x)),
         end.y=ifelse(type.name=="Pass",pass.end_loc.y,ifelse(type.name=="Carry",carry.end_loc.y,
                                                              loc.y))) %>% mutate(exitoso=ifelse(is.na(pass.outcome.name),"si","no")) 

ggplot()+geom_segment(aes(x=location.x,xend=end.x,y=loc.y,
                          yend=end.y,color=type.name),filter(graf,possession_team.name==team.name&
                                                               type.name%in%c("Pass","Carry")))+
  geom_point(aes(location.x,loc.y,color=type.name),filter(graf,possession_team.name==team.name&
                                                            !type.name%in%c("Pass","Carry","Pressure","Goal Keeper",
                                                                            "Foul Committed","Foul Won","Miscontrol")))+
  geom_segment(aes(x=location.x,xend=shot.end_location.x,y=loc.y,
                   yend=80-shot.end_location.y,color=type.name),linetype = 2,filter(graf,possession_team.name==team.name&
                                                                                                       type.name=="Shot"))+
  geom_segment(aes(x=x,xend=xend,y=y,yend=yend),data=lineas)+
  facet_wrap(~possession_team.name)+
  geom_segment(aes(x=0,xend=120,y=0,yend=0))+
geom_segment(aes(x=0,xend=120,y=80,yend=80))+
geom_segment(aes(x=0,xend=0,y=0,yend=80))+
geom_segment(aes(x=120,xend=120,y=0,yend=80))+
geom_segment(aes(x=60,xend=60,y=0,yend=80))+
geom_segment(aes(x=0,xend=120,y=62,yend=62))+
geom_segment(aes(x=0,xend=120,y=18,yend=18))+
geom_segment(aes(x=0,xend=120,y=30,yend=30))+
geom_segment(aes(x=0,xend=120,y=50,yend=50))+
geom_segment(aes(x=18,xend=18,y=0,yend=80))+
geom_segment(aes(x=39,xend=39,y=0,yend=80))+
geom_segment(aes(x=102,xend=102,y=0,yend=80))+
geom_segment(aes(x=81,xend=81,y=0,yend=80)) +
  labs(caption='Sentido del ataque de izquierda a derecha')+
  theme(legend.position = "bottom")

```





```{r gr,echo=FALSE,fig.width=9,eval=FALSE}
a<-duracion_pos2 %>% group_by(possession_team.id) %>% summarise(suma=sum(duracion_pos))
trayectoriasM %>% 
  bind_rows( trayectoriasF) %>% 
  filter(prom_av_p>0&prom_av_t>0) %>% 
  left_join(a,by="possession_team.id") %>% 
  ggplot()+geom_point(aes(prom_av_p,prom_av_t,color=suma))+facet_wrap(~resultado)+labs(x='Avance prom pases',
                                                                                       y='Avance prom conducc')


trayectoriasM %>% 
  bind_rows( trayectoriasF) %>% 
  filter(prom_av_p>0&prom_av_t>0) %>% 
  left_join(select(duracion_pos2,c(match_id,possession_team.id,duracion_pos)),by=c("match_id","possession_team.id")) %>% 
  ggplot()+geom_point(aes(prom_av_p,prom_av_t,color=duracion_pos))+facet_wrap(mundial~resultado)+labs(x='Avance prom pases',
                                                                                       y='Avance prom conducc')
```

```{r}
#| output: false
#| echo: false
library(tidyverse)
library(tidymodels)
library(agua)
library(h2o)
library(readxl)
library(knitr)
library(rpart.plot)
library(yardstick)
library(tidymodels)
library(xgboost)
library(lightgbm)
library(baguette) 
library(bonsai)
library(gt)
library(vip)
library(doParallel)
library(knitr)

df <- read_excel("./data/trayectorias.xlsx") %>%
  select(-c(termina, gol, tiro, termina_tiro, participa_golero)) %>%
  mutate(exito = factor(exito, levels = c(1, 0), labels = c("1", "0")))

df_split <- initial_split(df)
train <- training(df_split)
test <- testing(df_split)

all_cores <- parallel::detectCores(logical = FALSE)
registerDoParallel(cores = all_cores)
```

## Idea del modelo
El objetivo del modelo es clasificar las jugadas en exitosas o no exitosas, con el criterio de éxito definido subjetivamente. Para esto, se analizarán distintas características de cada jugada, buscando identificar las variables que permitan predecir con mayor precisión si una jugada será exitosa o no.

Después de la descripción de los datos, se propone la creación de una variable objetivo (a predecir) denominada "éxito", que tomará un valor binario para representar el éxito o fracaso de cada jugada.

A continuación, se realizará un análisis exploratorio de datos (EDA) enfocado en esta variable de éxito, observando cómo se comporta en función de las características de las jugadas. Este análisis permitirá identificar patrones y relaciones que puedan ser útiles en la clasificación y mejora del rendimiento del modelo.

La variable éxito se define a partir de la categorización de las jugadas: si la jugada termina en un tiro al arco, en un córner a favor, si la mayoría de las acciones se realizan bajo presión del rival y pese a ello se logra mantener la posesión, si la secuencia logra llegar hasta el área rival, si la posesión comienza en campo propio y logra llevar al tercio final con al menos 3 acciones y finalmente si el rival no logra recuperar la pelota y comete falta. 

Tanto las trayectorias en las que el rival logra recuperar la pelota así como aquellas que no cumplen ninguna de las 6 condiciones mencionadas se califican como *no exitosas* (variable exito=0)

## Variables a usar

```{r}
#| echo: false
variables_info <- data.frame(
  Variable = c("possession", "period", "possession_team.id", "possession_team.name", 
               "team.name", "x_inicio", "y_inicio", "x_fin", "y_fin", "n_eventos", 
               "n_pases", "n_pasesC", "n_traslados", "prom_av_p", "prom_av_t", 
               "n_jugadores", "n_centros", "n_cdf", "n_pases_arearival", 
               "n_ingresos_arearival", "inicia_golero", "resultado", "zona_inicio", 
               "zona_fin", "xG", "vel_media_p", "vel_media_c", "exito"),
  
  Descripcion = c("Posesión del balón", "Período del partido", "ID del equipo en posesión",
                  "Nombre del equipo en posesión", "Nombre del equipo", "Coordenada X de inicio",
                  "Coordenada Y de inicio", "Coordenada X de fin", "Coordenada Y de fin",
                  "Número de eventos", "Número de pases", "Número de pases completados",
                  "Número de traslados", "Promedio de avance en pase", "Promedio de avance en traslado",
                  "Número de jugadores en la jugada", "Número de centros", "Número de centros fallidos",
                  "Número de pases al área rival", "Número de ingresos al área rival",
                  "Si la jugada inicia con el golero", "Estado del marcador al momento de la jugada",
                  "Zona de inicio", "Zona de fin", "Ni idea", 
                  "Velocidad media en pase", "Velocidad media en conducción", "Resultado de éxito"),
  
  Tipo = c("Numérica", "Categórica", "Numérica", "Categórica", "Categórica", "Numérica",
           "Numérica", "Numérica", "Numérica", "Numérica", "Numérica", "Numérica", 
           "Numérica", "Numérica", "Numérica", "Numérica", "Numérica", "Numérica",
           "Numérica", "Numérica", "Binaria", "Categórica", "Categórica", "Categórica", 
           "Numérica", "Numérica", "Numérica", "Binaria")
)



variables_info %>%
  gt() %>%
  tab_header(
    title = md("**Características de las Variables para el Modelo**")
  ) %>%
  cols_label(
    Variable = md("**Variable**"),
    Descripcion = md("**Descripción**"),
    Tipo = md("**Tipo**")
  ) %>%
  tab_style(
    style = cell_borders(
      sides = "all",
      color = "gray",
      weight = px(1)
    ),
    locations = cells_body()
  ) %>%
  cols_align(
    align = "left",
    columns = c(Variable, Descripcion)
  ) %>%
  cols_align(
    align = "center",
    columns = Tipo
  ) %>%
  tab_options(
    table.width = pct(100),
    column_labels.background.color = "gray95",
    table.border.top.width = px(3),
    table.border.bottom.width = px(3)
  )
```

## EDA

```{r}
#| echo: false
df = df %>%  mutate(diff_x = x_inicio - x_fin, diff_y = y_inicio - y_fin) 
```


```{r}
#| echo: false
df  %>% ggplot(aes( x = exito, y = diff_x)) + geom_violin(fill = "skyblue")  + labs(y = "Diferencia X")
```
Se observa una dispersion mayor de la diferencia en la diferencia en el eje X en las jugadas exitosas que en las no exitosas. Además, se observa que la mayoria de las jugadas exitos estan concentradas respecto a 0, lo que tiene sentido ya que son jugadas que empiezan y termunan en el mismo lugar.
```{r}
#| echo: false
df  %>% ggplot(aes( x = exito, y = diff_y)) + geom_violin(fill = "skyblue") + labs(y = "Diferencia Y")
```

En este caso el coportamiento no es diferente entre si las jugadas son exitosas o no.
```{r}
#| echo: false
df %>%
  ggplot(aes(x = exito, y = tiempo)) +
  geom_violin(fill = "skyblue") +
  labs(x = "Éxito", y = "Tiempo")
```

Aunque la mayoria de las jugadas tanto exitosas como no exitosas se concentran cercanas a tiempo 0 , la concentración en 0 es mucho mayor en las jugadas que no exitosas. 
```{r}
#| echo: false
df  %>% ggplot(aes(x = n_pases)) + geom_histogram(bins = 20 , fill = "skyblue" , color = "black") + facet_wrap(~exito) + labs(y = "Número de pases")
```

```{r}
#| echo: false
df  %>% ggplot(aes(x = n_pasesC)) + geom_histogram(bins = 20 , fill = "skyblue" , color = "black") + facet_wrap(~exito) + labs(y = "Número de pases completados")
```

Aunque los histrogramas son similares , no es un detalle menor la  moda de la cantidad de pases en la jugada, que es  mayor en las jugadas exitosas que en las no exitosas.


```{r}
#| echo: false
df  %>% ggplot(aes( x = exito, y = n_jugadores)) + geom_violin(fill = "skyblue")  + labs(y = "Número de jugadores")
```

```{r}
#| echo: false
df  %>% ggplot(aes( x = exito, y = n_traslados)) + geom_violin(fill = "skyblue")  + labs(y = "Número de traslado")
```

Tanto en la cantidad de traslados como en la cantidad de jugadores que participan en la jugada, se observa una mayor concentranion de valores cercanos a 0 en las jugadas que no son exitosas que en las que son exitosas.


```{r,eval=FALSE}
graf2<-trayM %>% mutate(mundial='m') %>% 
  rbind(trayF %>% mutate(mundial='F')) %>% ungroup() %>%  group_by(possession) %>% 
  select(match_id,possession,termina) %>% distinct() %>% 
  inner_join(d,by=c("match_id","possession")) %>% 
  filter((sum(type.id==30)>0|sum(type.id==43)>0) & 
           !type.id%in% eventos_irrelevantes) %>% 
  ungroup() %>% 
  select(match_id,minute,second,period,possession,possession_team.name,team.name,type.name,player.name,
         under_pressure,location.x,location.y,pass.end_location.x,pass.end_location.y,
         carry.end_location.x,carry.end_location.y,play_pattern.name,resultado,pass.outcome.name,
         ball_receipt.outcome.name,duel.outcome.name,dribble.outcome.name,
         interception.outcome.name,shot.end_location.x,shot.end_location.y,shot.outcome.name,termina,mundial) %>% 
  mutate(loc.y=80-location.y,
         pass.end_loc.y=80-pass.end_location.y,
         carry.end_loc.y=80-carry.end_location.y,
         end.x=ifelse(type.name=="Pass",pass.end_location.x,ifelse(type.name=="Carry",carry.end_location.x,
                                                              location.x)),
         end.y=ifelse(type.name=="Pass",pass.end_loc.y,ifelse(type.name=="Carry",carry.end_loc.y,
                                                              loc.y))) %>% mutate(exitoso=ifelse(is.na(pass.outcome.name),"si","no")) 

graf2 %>% 
  # mutate(mundial='M') %>% 
  # bind_rows(graf2) %>% 
  select(match_id,possession,location.x,loc.y,
         termina,mundial) %>%
  bind_rows(graf2 %>% select(location.x=end.x,loc.y=end.y,cluster,termina) %>% mutate(mundial='M')) %>% 
  filter(termina %in%c("area rival","tiro")) %>% 
  ggplot() +
  stat_density_2d(aes(x = location.x, y = loc.y, fill = after_stat(density)), geom = "tile", contour = FALSE) +
  geom_segment(aes(x=x,xend=xend,y=y,yend=yend),color='white',data=lineas)+
  labs(title = "", 
       x = "", y = "") +
  scale_fill_viridis_c()+
  facet_grid(termina~mundial)+theme(axis.text = element_blank(),
                             axis.ticks = element_blank())

```



## Modelos
Se proponenen 3 modelos distintos para el problema de clasificación de la variable exito. Uno logistico,  un random forest y  un LightGBM. La idea es usar la regresión logística para entender como influyen los distintos factores en la variable exito sin perder la interpretabilidad de los resultados. Los otros dos se prponen más con la idea de predecir la variable exito usando la información que se tiene en el conjunto de datos. Se eligen estos modelos uno produce menos overfitting(random forest) y otro produce menos error en la validación(LightGBM).

